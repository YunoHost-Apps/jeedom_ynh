#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
	true
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
admin=$YNH_APP_ARG_ADMIN
sudo=$YNH_APP_ARG_SUDO

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..."

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die --message="This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..."

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=path --value=$path_url
ynh_app_setting_set --app=$app --key=admin --value=$admin
ynh_app_setting_set --app=$app --key=sudo --value=$sudo

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..."

ynh_install_app_dependencies $pkg_dependencies

#=================================================
# CREATE A MYSQL DATABASE
#=================================================
ynh_script_progression --message="Creating a MySQL database..."

db_name=$(ynh_sanitize_dbid --db_name=$app)
db_user=$db_name
ynh_app_setting_set --app=$app --key=db_name --value=$db_name
ynh_mysql_setup_db --db_user=$db_user --db_name=$db_name

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..."

ynh_app_setting_set --app=$app --key=final_path --value=$final_path
# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$final_path"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring nginx web server..."

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..."

# Create a system user
ynh_system_user_create --username=$app

# For nginx user to be able to communicate with home automation devices
	if [ $(getent group dialout) ]; then
		usermod -a -G dialout $app
	fi
	if [ $(getent group gpio) ]; then
		usermod -a -G gpio $app
	fi
	if [ $(getent group tty) ]; then
		usermod -a -G tty $app
	fi

# Sudo permissions to the user if agreed to
	if [ $sudo ]; then
		usermod -a -G sudo $app
		if [ $(sudo grep "$app ALL=(ALL) NOPASSWD: ALL" /etc/sudoers | wc -l) -eq 0 ];then
			bash -c 'echo "'${app}' ALL=(ALL) NOPASSWD: ALL" | (EDITOR="tee -a" visudo)'
		fi
	fi

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring php-fpm..."

# Create a dedicated php-fpm config
ynh_add_fpm_config

#=================================================
# SPECIFIC SETUP
#=================================================
# INSTALL JEEDOM
#=================================================
ynh_script_progression --message="Installing Jeedom..."

# Configure Jeedom database and initialize app
ynh_replace_string "#DBNAME#" "$db_name" ../conf/common.config.php
ynh_replace_string "#USERNAME#" "$db_name" ../conf/common.config.php
ynh_replace_string "#PASSWORD#" "$db_pwd" ../conf/common.config.php
sudo cp ../conf/common.config.php $final_path/core/config/common.config.php

# Install Jeedom	
sudo php $final_path/install/install.php mode=force

# Configure LDAP and the Admin User and access settings
ynh_replace_string "__ADMIN__" "$admin" ../conf/config.sql
mysql -u $db_name -p$db_pwd $db_name < ../conf/config.sql

# Cron
echo "* * * * * $app /usr/bin/php -f $final_path/core/php/jeeCron.php" > cronjeedom
sudo mv cronjeedom /etc/cron.d/${app}
sudo chown root /etc/cron.d/${app}

echo "* * * * * $app /usr/bin/php -f $final_path/core/php/watchdog.php" > cronjeedom_watchdog
sudo mv cronjeedom_watchdog /etc/cron.d/${app}_watchdog
sudo chown root /etc/cron.d/${app}_watchdog

# Check
#sudo php $final_path/install/sick.php

#=================================================
# STORE THE CONFIG FILE CHECKSUM
#=================================================
ynh_script_progression --message="Storing the config file checksum..."

# Calculate and store the config file checksum into the app settings
ynh_store_file_checksum --file="$final_path/core/config/common.config.php"

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================
ynh_script_progression --message="Securing files and directories..."

# Set permissions to app files
chown -R $app: $final_path
chmod 775 -R $final_path

# Create tmp required by Jeedom
mkdir -p /tmp/jeedom
chmod 777 -R /tmp/jeedom

#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Configuring SSOwat..."

# Remove the public access
ynh_app_setting_delete --app=$app --key=skipped_uris

# Access to API without SSO
ynh_app_setting_set --app=$app --key=unprotected_uris --value="/core/api/jeeApi.php"

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading nginx web server..."

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed"
